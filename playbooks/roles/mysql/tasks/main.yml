---
- include_tasks: full_reset.yml
  when: mgr_full_reset

- name: Install a apt mysql.deb package from the internet.
  apt:
    deb: https://repo.mysql.com//mysql-apt-config_0.8.8-1_all.deb

- name: Install mysql
  apt: name={{ item }} state=installed update_cache=yes
  with_items:
    - mysql-server
    - mysql-client
    - python-mysqldb
    - python-pip
    - libcache-cache-perl 
    - libipc-sharelite-perl

- name: install mycli
  pip:
    name: mycli

- name: start service mysql
  service: name={{ mysql_service }} state=started enabled=yes

- name: Create my.cnf
  template: src=../templates/my.cnf.j2 dest=/root/.my.cnf

- name: ensure anonymous users are not in the database
  mysql_user: name='' host_all=yes state=absent

- name: Remove test database
  mysql_db: name=test state=absent

- name: update mysql root password for all root accounts
  mysql_user: name=root host={{ item }} password="{{ mysql_root_db_pass }}"
  with_items:
   - "{{ ansible_hostname }}"
   - 127.0.0.1
   - ::1
   - localhost

- name: nagios mysql account
  mysql_user:
    name: "{{ nagios_username }}"
    password: "{{ nagios_pwd }}"
    priv: "*.*:USAGE,REPLICATION CLIENT,PROCESS"
    state: present
  when: not mysql_group_replication_deployment

- name: Copy Mysql config
  copy: src=../files/mysqld.cnf dest=/etc/mysql/mysql.conf.d/mysqld.cnf mode=0644 owner=root group=root

- name: Mysql tune config
  template: src=templates/optimisation.cnf dest=/etc/mysql/mysql.conf.d/optimisation.cnf mode=0644 owner=root group=root
  become: yes

- name: Restart service Mysql
  service:
    name: mysql
    state: restarted
  when: not mysql_group_replication_deployment

- include_tasks: mgr.yml
  when: mysql_group_replication_deployment
